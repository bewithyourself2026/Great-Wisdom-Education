// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  email         String         @unique
  name          String
  role          UserRole       @default(STUDENT)
  registrations Registration[]
  instructor    Instructor?
}

model Instructor {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @unique
  title         String?
  bio           String?
  expertise     Json?
  camps         Camp[]
}

model Location {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  country   String
  city      String
  address   String?
  latitude  Float?
  longitude Float?
  camps     Camp[]
}

model Camp {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  title         String
  slug          String      @unique
  description   String
  startDate     DateTime
  endDate       DateTime
  capacity      Int
  priceCents    Int         @default(0)
  currency      String      @default("USD")
  category      CampCategory
  location      Location    @relation(fields: [locationId], references: [id])
  locationId    String
  instructor    Instructor  @relation(fields: [instructorId], references: [id])
  instructorId  String
  sessions      Session[]
  registrations Registration[]
}

model Session {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  camp        Camp     @relation(fields: [campId], references: [id])
  campId      String
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
}

model Registration {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  camp      Camp     @relation(fields: [campId], references: [id])
  campId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  status    RegistrationStatus @default(PENDING)
}

enum UserRole {
  STUDENT
  INSTRUCTOR
  ADMIN
}

enum RegistrationStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum CampCategory {
  ACADEMIA
  INDUSTRY
  LANGUAGE
}
